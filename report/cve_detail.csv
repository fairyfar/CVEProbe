,libssh2,1,CVE-2019-17498,Modified,https://nvd.nist.gov/vuln/detail/CVE-2019-17498,".",2019-10-21,2024-11-21,5.8,MEDIUM,"AV:N/AC:M/Au:N/C:P/I:N/A:P",N/A,N/A,"N/A",8.1,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H",N/A,N/A,"N/A",,,,,,"In libssh2 v1.9.0 and earlier versions, the SSH_MSG_DISCONNECT logic in packet.c has an integer overflow in a bounds check, enabling an attacker to specify an arbitrary (out-of-bounds) offset for a subsequent memory read. A crafted SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server."
,libssh2,1,CVE-2023-48795,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-48795,".",2023-12-18,2025-08-27,N/A,N/A,"N/A",N/A,N/A,"N/A",5.9,MEDIUM,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",N/A,N/A,"N/A",,,,,,"The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
haxx,curl,7,CVE-2021-22946,Modified,https://nvd.nist.gov/vuln/detail/CVE-2021-22946,".",2021-09-29,2024-11-21,5.0,MEDIUM,"AV:N/AC:L/Au:N/C:P/I:N/A:N",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network."
haxx,curl,7,CVE-2022-22576,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-22576,".",2022-05-26,2024-11-21,5.5,MEDIUM,"AV:N/AC:L/Au:S/C:P/I:P/A:N",N/A,N/A,"N/A",8.1,HIGH,"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",N/A,N/A,"N/A",,,,,,"An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only)."
haxx,curl,7,CVE-2022-27774,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-27774,".",2022-06-02,2024-11-21,3.5,LOW,"AV:N/AC:M/Au:S/C:P/I:N/A:N",N/A,N/A,"N/A",5.7,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers."
haxx,curl,7,CVE-2022-27775,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-27775,".",2022-06-02,2024-11-21,5.0,MEDIUM,"AV:N/AC:L/Au:N/C:P/I:N/A:N",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead."
haxx,curl,7,CVE-2022-27776,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-27776,".",2022-06-02,2024-11-21,4.3,MEDIUM,"AV:N/AC:M/Au:N/C:P/I:N/A:N",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number."
haxx,curl,7,CVE-2022-27782,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-27782,".",2022-06-02,2024-11-21,5.0,MEDIUM,"AV:N/AC:L/Au:N/C:N/I:P/A:N",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",N/A,N/A,"N/A",,,,,,"libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily."
haxx,curl,7,CVE-2022-32205,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-32205,".",2022-07-07,2025-05-05,4.3,MEDIUM,"AV:N/AC:M/Au:N/C:N/I:N/A:P",N/A,N/A,"N/A",4.3,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",N/A,N/A,"N/A",,,,,,"A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl < 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a ""sister server"" to effectively cause a denial of service for a sibling site on the same second level domain using this method."
haxx,curl,7,CVE-2022-32206,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-32206,".",2022-07-07,2025-05-05,4.3,MEDIUM,"AV:N/AC:M/Au:N/C:N/I:N/A:P",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",N/A,N/A,"N/A",,,,,,"curl < 7.84.0 supports ""chained"" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable ""links"" in this ""decompression chain"" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a ""malloc bomb"", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors."
haxx,curl,7,CVE-2022-32207,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-32207,".",2022-07-07,2025-04-23,7.5,HIGH,"AV:N/AC:L/Au:N/C:P/I:P/A:P",N/A,N/A,"N/A",9.8,CRITICAL,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",N/A,N/A,"N/A",,,,,,"When curl < 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended."
haxx,curl,7,CVE-2022-32208,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-32208,".",2022-07-07,2025-05-05,4.3,MEDIUM,"AV:N/AC:M/Au:N/C:P/I:N/A:N",N/A,N/A,"N/A",5.9,MEDIUM,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client."
haxx,curl,7,CVE-2022-35252,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-35252,".",2022-09-23,2025-05-05,N/A,N/A,"N/A",N/A,N/A,"N/A",3.7,LOW,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",N/A,N/A,"N/A",,,,,,"When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a""sister site"" to deny service to all siblings."
haxx,curl,7,CVE-2022-42916,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-42916,".",2022-10-29,2024-11-21,N/A,N/A,"N/A",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26."
haxx,curl,7,CVE-2022-42915,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-42915,".",2022-10-29,2025-05-07,N/A,N/A,"N/A",N/A,N/A,"N/A",8.1,HIGH,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",N/A,N/A,"N/A",,,,,,"curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0."
haxx,curl,7,CVE-2022-32221,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-32221,".",2022-12-05,2024-11-21,N/A,N/A,"N/A",N/A,N/A,"N/A",9.8,CRITICAL,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",N/A,N/A,"N/A",,,,,,"When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST."
haxx,curl,7,CVE-2022-43551,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-43551,".",2022-12-23,2024-11-21,N/A,N/A,"N/A",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded."
haxx,curl,7,CVE-2022-43552,Modified,https://nvd.nist.gov/vuln/detail/CVE-2022-43552,".",2023-02-09,2024-11-21,N/A,N/A,"N/A",N/A,N/A,"N/A",5.9,MEDIUM,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",N/A,N/A,"N/A",,,,,,"A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path."
haxx,curl,7,CVE-2023-23914,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-23914,".",2023-02-23,2025-03-12,N/A,N/A,"N/A",N/A,N/A,"N/A",9.1,CRITICAL,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",N/A,N/A,"N/A",,,,,,"A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on."
haxx,curl,7,CVE-2023-23915,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-23915,".",2023-02-23,2024-11-21,N/A,N/A,"N/A",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",N/A,N/A,"N/A",,,,,,"A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS."
haxx,curl,7,CVE-2023-23916,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-23916,".",2023-02-23,2025-03-12,N/A,N/A,"N/A",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",N/A,N/A,"N/A",,,,,,"An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the ""chained"" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable ""links"" in this ""decompression chain"" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a ""malloc bomb"", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors."
haxx,curl,7,CVE-2023-27533,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-27533,".",2023-03-30,2024-11-21,N/A,N/A,"N/A",N/A,N/A,"N/A",8.8,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",N/A,N/A,"N/A",,,,,,"A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and ""telnet options"" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system."
haxx,curl,7,CVE-2023-27534,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-27534,".",2023-03-30,2025-04-23,N/A,N/A,"N/A",N/A,N/A,"N/A",8.8,HIGH,"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",N/A,N/A,"N/A",,,,,,"A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user."
haxx,curl,7,CVE-2023-28319,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-28319,".",2023-05-26,2025-01-15,N/A,N/A,"N/A",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",N/A,N/A,"N/A",,,,,,"A use after free vulnerability exists in curl <v8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed."
haxx,curl,7,CVE-2023-28320,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-28320,".",2023-05-26,2025-01-15,N/A,N/A,"N/A",N/A,N/A,"N/A",5.9,MEDIUM,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",N/A,N/A,"N/A",,,,,,"A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave."
haxx,curl,7,CVE-2023-28321,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-28321,".",2023-05-26,2025-01-15,N/A,N/A,"N/A",N/A,N/A,"N/A",5.9,MEDIUM,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",N/A,N/A,"N/A",,,,,,"An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as ""Subject Alternative Name"" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`."
haxx,curl,7,CVE-2023-28322,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-28322,".",2023-05-26,2024-11-21,N/A,N/A,"N/A",N/A,N/A,"N/A",3.7,LOW,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",N/A,N/A,"N/A",,,,,,"An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST."
haxx,curl,7,CVE-2023-46218,Modified,https://nvd.nist.gov/vuln/detail/CVE-2023-46218,".",2023-12-07,2025-06-30,N/A,N/A,"N/A",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",N/A,N/A,"N/A",,,,,,"This flaw allows a malicious HTTP server to set ""super cookies"" in curl that
are then passed back to more origins than what is otherwise allowed or
possible. This allows a site to set cookies that then would get sent to
different and unrelated sites and domains.

It could do this by exploiting a mixed case flaw in curl's function that
verifies a given cookie domain against the Public Suffix List (PSL). For
example a cookie could be set with `domain=co.UK` when the URL used a lower
case hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain."
haxx,curl,7,CVE-2024-2398,Analyzed,https://nvd.nist.gov/vuln/detail/CVE-2024-2398,".",2024-03-27,2025-07-30,N/A,N/A,"N/A",N/A,N/A,"N/A",8.6,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L",N/A,N/A,"N/A",,,,,,"When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application."
haxx,curl,7,CVE-2024-8096,Analyzed,https://nvd.nist.gov/vuln/detail/CVE-2024-8096,".",2024-09-11,2025-07-30,N/A,N/A,"N/A",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",N/A,N/A,"N/A",,,,,,"When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate."
haxx,curl,7,CVE-2024-9681,Modified,https://nvd.nist.gov/vuln/detail/CVE-2024-9681,".",2024-11-06,2024-12-13,N/A,N/A,"N/A",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:L",N/A,N/A,"N/A",,,,,,"When curl is asked to use HSTS, the expiry time for a subdomain might
overwrite a parent domain's cache entry, making it end sooner or later than
otherwise intended.

This affects curl using applications that enable HSTS and use URLs with the
insecure `HTTP://` scheme and perform transfers with hosts like
`x.example.com` as well as `example.com` where the first host is a subdomain
of the second host.

(The HSTS cache either needs to have been populated manually or there needs to
have been previous HTTPS accesses done as the cache needs to have entries for
the domains involved to trigger this problem.)

When `x.example.com` responds with `Strict-Transport-Security:` headers, this
bug can make the subdomain's expiry timeout *bleed over* and get set for the
parent domain `example.com` in curl's HSTS cache.

The result of a triggered bug is that HTTP accesses to `example.com` get
converted to HTTPS for a different period of time than what was asked for by
the origin server. If `example.com` for example stops supporting HTTPS at its
expiry time, curl might then fail to access `http://example.com` until the
(wrongly set) timeout expires. This bug can also expire the parent's entry
*earlier*, thus making curl inadvertently switch back to insecure HTTP earlier
than otherwise intended."
haxx,curl,7,CVE-2024-11053,Analyzed,https://nvd.nist.gov/vuln/detail/CVE-2024-11053,".",2024-12-11,2025-07-30,N/A,N/A,"N/A",N/A,N/A,"N/A",3.4,LOW,"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N",N/A,N/A,"N/A",,,,,,"When asked to both use a `.netrc` file for credentials and to follow HTTP
redirects, curl could leak the password used for the first host to the
followed-to host under certain circumstances.

This flaw only manifests itself if the netrc file has an entry that matches
the redirect target hostname but the entry either omits just the password or
omits both login and password."
haxx,curl,7,CVE-2025-0167,Analyzed,https://nvd.nist.gov/vuln/detail/CVE-2025-0167,".",2025-02-05,2025-07-30,N/A,N/A,"N/A",N/A,N/A,"N/A",3.4,LOW,"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N",N/A,N/A,"N/A",,,,,,"When asked to use a `.netrc` file for credentials **and** to follow HTTP
redirects, curl could leak the password used for the first host to the
followed-to host under certain circumstances.

This flaw only manifests itself if the netrc file has a `default` entry that
omits both login and password. A rare circumstance."
haxx,curl,7,CVE-2025-0725,Analyzed,https://nvd.nist.gov/vuln/detail/CVE-2025-0725,".",2025-02-05,2025-06-27,N/A,N/A,"N/A",N/A,N/A,"N/A",7.3,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",N/A,N/A,"N/A",,,,,,"When libcurl is asked to perform automatic gzip decompression of
content-encoded HTTP responses with the `CURLOPT_ACCEPT_ENCODING` option,
**using zlib 1.2.0.3 or older**, an attacker-controlled integer overflow would
make libcurl perform a buffer overflow."
,protobuf,3,CVE-2021-22570,Modified,https://nvd.nist.gov/vuln/detail/CVE-2021-22570,".",2022-01-26,2024-11-21,2.1,LOW,"AV:L/AC:L/Au:N/C:N/I:N/A:P",N/A,N/A,"N/A",6.5,MEDIUM,"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",N/A,N/A,"N/A",,,,,,"Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater."
,protobuf,1,CVE-2024-7254,Modified,https://nvd.nist.gov/vuln/detail/CVE-2024-7254,".",2024-09-19,2025-09-08,N/A,N/A,"N/A",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",8.7,HIGH,"CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X",,,,,,"Any project that parses untrusted Protocol Buffers data containing an arbitrary number of nested groups / series of SGROUP tags can corrupted by exceeding the stack limit i.e. StackOverflow. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker."
,protobuf,3,CVE-2024-7254,Modified,https://nvd.nist.gov/vuln/detail/CVE-2024-7254,".",2024-09-19,2025-09-08,N/A,N/A,"N/A",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",8.7,HIGH,"CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X",,,,,,"Any project that parses untrusted Protocol Buffers data containing an arbitrary number of nested groups / series of SGROUP tags can corrupted by exceeding the stack limit i.e. StackOverflow. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker."
,protobuf,3,CVE-2024-7254,Modified,https://nvd.nist.gov/vuln/detail/CVE-2024-7254,".",2024-09-19,2025-09-08,N/A,N/A,"N/A",N/A,N/A,"N/A",7.5,HIGH,"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",8.7,HIGH,"CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X",,,,,,"Any project that parses untrusted Protocol Buffers data containing an arbitrary number of nested groups / series of SGROUP tags can corrupted by exceeding the stack limit i.e. StackOverflow. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker."
